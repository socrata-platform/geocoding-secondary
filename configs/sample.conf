# use local.dev.socrata.net to support solo which resolves to 127.0.0.1
common-host = "local.dev.socrata.net"
common-zk-host = "local.dev.socrata.net:2181"
common-zk-ensemble = ["local.dev.socrata.net:2181"]
common-cassandra-ensemble = ["local.dev.socrata.net:9160"]
common-amq-conn-str = "tcp://local.dev.socrata.net:61616"

com.socrata.coordinator.secondary-watcher = {
  database = {
    app-name = secondary-watcher-geocoding
    database = datacoordinator
    host = ${common-host}
    port = 5432
    username = blist
    password = blist

    c3p0 {
      maxPoolSize = 20
      idleConnectionTestPeriod = 60
      testConnectionOnCheckin = true
      preferredTestQuery = "SELECT 1"
      maxIdleTimeExcessConnections = 300
    }
  }

  instance = primus

  curator.ensemble = ${common-zk-ensemble}
  service-advertisement.address = ${common-host}
  collocation.group = [primus]

  secondary {
    # unused
    defaultGroups = []
    groups { }

    instances {
      geocoding {
        secondaryType = geocoding
        config = ${com.socrata.geocoding-secondary}
        numWorkers = 2
      }
    }
  }

  claim-timeout = 1m
  watcher-id = 61e9a209-98e7-4daa-9c43-5778a96e1d8a

  metrics {
    # Should be unique for each service
    prefix = "com.socrata.data.coordinator"
    log-metrics = false
    enable-graphite = false
  }

  tmpdir = ${java.io.tmpdir}

  message-producer {
    eurybates {
      producers = "activemq"
      activemq.connection-string = ${common-amq-conn-str}
    }

    zookeeper {
      conn-spec = ${common-zk-host}
      session-timeout = 4s
    }
  }

  log4j = {
    rootLogger = [ INFO, console ]
    appender {
      console.class = org.apache.log4j.ConsoleAppender
      console.props {
        layout.class = org.apache.log4j.PatternLayout
        layout.props {
          ConversionPattern = "[%t] (%X{job-id}) (%X{X-Socrata-RequestId}) [%X{dataset-id}] %p %c{1} %d %m%n"
        }
      }
    }

    logger.com.socrata = INFO # if you want com.socrata components to log noisely you can change this to DEBUG or TRACE
  }
}

com.socrata.geocoding-secondary {
  cassandra.connection-pool.seeds = ${common-cassandra-ensemble}

  curator.ensemble = ${common-zk-ensemble}

  geocoder.mapquest.app-token = SOME_APP_TOKEN # you will need to find a real MapQuest app token and override this
}